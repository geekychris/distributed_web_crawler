apiVersion: v1
kind: Service
metadata:
  name: cassandra
  namespace: crawler
  labels:
    app: cassandra
spec:
  clusterIP: None
  ports:
  - port: 9042
  selector:
    app: cassandra
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra
  namespace: crawler
spec:
  serviceName: cassandra
  replicas: 3
  selector:
    matchLabels:
      app: cassandra
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      containers:
      - name: cassandra
        image: cassandra:4.1.3
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        env:
        - name: CASSANDRA_CLUSTER_NAME
          value: "crawler_cluster"
        - name: CASSANDRA_DC
          value: "datacenter1"
        - name: CASSANDRA_RACK
          value: "rack1"
        - name: CASSANDRA_ENDPOINT_SNITCH
          value: SimpleSnitch
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: data
          mountPath: /var/lib/cassandra
      initContainers:
      - name: init-schema
        image: cassandra:4.1.3
        command: ['sh', '-c', 'until cqlsh cassandra-0.cassandra.crawler.svc.cluster.local 9042 -f /init/schema.cql; do echo waiting for cassandra; sleep 2; done']
        volumeMounts:
        - name: schema
          mountPath: /init
      volumes:
      - name: schema
        configMap:
          name: cassandra-schema
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 20Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cassandra-schema
  namespace: crawler
data:
  schema.cql: |
    CREATE KEYSPACE IF NOT EXISTS crawler
        WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 2};

    USE crawler;

    CREATE TABLE IF NOT EXISTS pages (
        url text PRIMARY KEY,
        content_hash text,
        fetch_time timestamp,
        http_status int,
        headers map<text, text>,
        links set<text>,
        metadata map<text, text>,
        s3_key text
    );

    CREATE INDEX IF NOT EXISTS idx_content_hash ON pages(content_hash);

    CREATE TABLE IF NOT EXISTS crawl_state (
        domain text PRIMARY KEY,
        last_crawl_time timestamp,
        robots_txt text,
        crawl_delay int
    );
